// 기본제공 타임의 객체는 직접 손으로 초기화, 경우에 따라서 저절로 초기화 되기도 하지만 안될때도 있기 때문
// 생성자에서는, 데이터 멤버에 대한 대입문을 생성자 본문 내부에 넣는 방법으로 멤버를 초기화 하지 말고, 멤버 초기화 리스트를 사용하라
// 초기화 리스트에 데이터 멤버를 나열 할 때는 클래스에 각 데이터 멤버가 선언된 순서와 똑같이 나열 한다.

// 여러 번역단위에 있는 비지역 정적 객체들의 초기화 순서 문제는 피해서 설계해야 됨 비지역 정적 객체를 지역 정적 객체로 바꾸면 됨

class FileSystem{...};

FileSystem& tfs(void)   // 이 함수는 FileSystem 클래스 안에 정적 멤버로 들어가도 됨
{
    static FileSystme fs; // 지역 정적 객체를 정의하고 초기화
                            // 이 객체에 대한 참조자를 반환
                            // 지역 정적 객체는 함수가 처음 불릴때 반드시 초기화 됨.
    return fs;
}

class Directory {///};

Directory::Directory(params)
{
    // FileSystem& tfs = ...; 이러한 정의 필요 없이
    // tfs() 함수 호출만으로도 같은 객체가 반환 됨                             
    std::size_t disks = tfs().numDisk(); 
}